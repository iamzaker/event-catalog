name: Generate Catalog
on:
  push:
    branches:
      - main

permissions:
  contents: write
  
jobs:

  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup
        run: |
          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh cache list --ref $BRANCH --limit 100 --json id --jq '.[].id')

          ## Setting this to not fail the workflow while deleting cache keys.
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
              echo "Deleting cache key: $cacheKey"
              gh cache delete $cacheKey
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          BRANCH: refs/pull/${{ github.event.pull_request.number }}/merge

  generate-eventcatalog:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch the full history to ensure the latest state

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

          
      - name: Print package.json
        run: cat package.json

      - name: Clean Workspace
        run: |
          rm -rf node_modules
          rm -rf yarn.lock
          rm -rf package-lock.json
          rm -rf .yarn
          yarn cache clean
          npm cache clean --force

      - name: Install Specific Yarn Version
        run: npm install -g yarn@1.22.22
          # cache-dependency-path: './package-lock.json'

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            
      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: yarn install --force --frozen-lockfile    

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
        
      - name: Switch to gh-pages branch
        run: |
          git fetch origin gh-pages
          git checkout gh-pages
          git pull origin gh-pages

      - name: Print Current Directory Structure
        run: |
          pwd
          ls -la
          tree || echo "Tree command not available"

      - name: List Yarn Scripts
        run: |
            yarn run
        
      
      - name: List npm Scripts
        run: |
            npm run
        
      - name: Generate Catalog
        run: |
          yarn run download-openapi
          # yarn run generate-catalog
      
      - name: Stage files in folder
        run: |
          git add openapi-files/
          git add domains/
          git add queries/
          git add services/
        
      - name: Commit changes
        run: |
          git commit -m "Update EventCatalog" || echo "No changes to commit"
          git push origin gh-pages #--force # Force push to overwrite the existing gh-pages branch because workflow manages the branch
          # git config --local user.email "